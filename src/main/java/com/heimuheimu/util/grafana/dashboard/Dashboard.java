/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2020 heimuheimu
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.heimuheimu.util.grafana.dashboard;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Grafana 中的 Dashboard 信息。
 *
 * <p><strong>说明：</strong>Dashboard 类是非线程安全的，不允许多个线程使用同一个实例。</p>
 *
 * @author heimuheimu
 */
public class Dashboard {

    /**
     * dashboard 唯一数字 ID (generated by the db)
     */
    private Integer id = null;

    /**
     * dashboard 唯一字符串ID，长度为 8-40 (generated by anyone)
     */
    private String uid = null;

    /**
     * dashboard 标题
     */
    private String title = "";

    /**
     * dashboard 查询时间范围, 例如：last 6 hours, last 7 days 等等
     */
    private Map<String, String> time = new HashMap<>();

    /**
     * dashboard 中的模版信息
     */
    private Map<String, Object> templating = new HashMap<>();

    /**
     * dashboard 中的图表列表
     */
    private List<Panel> panels = new ArrayList<>();

    /**
     * Dashboard 默认构造函数，对 time、 templating 执行初始化。
     */
    public Dashboard() {
        time.put("from", "now-1h");
        time.put("to", "now");
        templating.put("list", new ArrayList<>());
    }

    /**
     * 获得 dashboard 唯一数字 ID。
     *
     * @return dashboard 唯一数字 ID
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置 dashboard 唯一数字 ID。
     *
     * @param id dashboard 唯一数字 ID
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获得 dashboard 唯一字符串ID。
     *
     * @return dashboard 唯一字符串ID
     */
    public String getUid() {
        return uid;
    }

    /**
     * 设置 dashboard 唯一字符串ID，长度为 8-40。
     *
     * @param uid dashboard 唯一字符串ID，长度为 8-40
     */
    public void setUid(String uid) {
        this.uid = uid;
    }

    /**
     * 获得 dashboard 标题。
     *
     * @return dashboard 标题
     */
    public String getTitle() {
        return title;
    }

    /**
     * 设置 dashboard 标题。
     *
     * @param title dashboard 标题
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * 获得 dashboard 查询时间范围, 例如：last 6 hours, last 7 days 等等。
     *
     * @return dashboard 查询时间范围
     */
    public Map<String, String> getTime() {
        return time;
    }

    /**
     * 设置 dashboard 查询时间范围。
     *
     * @param time dashboard 查询时间范围
     */
    public void setTime(Map<String, String> time) {
        this.time = time;
    }

    /**
     * 获得 dashboard 中的模版信息。
     *
     * @return dashboard 中的模版信息
     */
    public Map<String, Object> getTemplating() {
        return templating;
    }

    /**
     * 设置 dashboard 中的模版信息。
     *
     * @param templating dashboard 中的模版信息
     */
    public void setTemplating(Map<String, Object> templating) {
        this.templating = templating;
    }

    /**
     * 获得 dashboard 中的图表列表。
     *
     * @return dashboard 中的图表列表
     */
    public List<Panel> getPanels() {
        return panels;
    }

    /**
     * 设置 dashboard 中的图表列表。
     *
     * @param panels dashboard 中的图表列表
     */
    public void setPanels(List<Panel> panels) {
        this.panels = panels;
    }

    /**
     * 在 dashboard 中新增一个变量。
     *
     * @param variable 变量信息
     * @return 当前 dashboard 实例
     */
    @SuppressWarnings("unchecked")
    public Dashboard addVariable(Variable variable) {
        if (variable != null) {
            ((List<Variable>) templating.get("list")).add(variable);
        }
        return this;
    }

    /**
     * 在 dashboard 中新增一个图表信息。
     *
     * @param panel 图表信息
     * @return 当前 dashboard 实例
     */
    public Dashboard addPanel(Panel panel) {
        if (panel != null) {
            panels.add(panel);
        }
        return this;
    }

    @Override
    public String toString() {
        return "Dashboard{" +
                "id=" + id +
                ", uid='" + uid + '\'' +
                ", title='" + title + '\'' +
                ", time=" + time +
                ", templating=" + templating +
                ", panels=" + panels +
                '}';
    }
}
